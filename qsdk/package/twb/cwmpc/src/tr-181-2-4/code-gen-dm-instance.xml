<?xml version="1.0" encoding="UTF-8"?>
<urn:document xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-3" xmlns:dmr="urn:broadband-forum-org:cwmp:datamodel-report-0-1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:urn="urn:broadband-forum-org:cwmp:datamodel-1-4">
  <dataType xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="IPv4Address" base="IPAddress">
    <description>IPv4 address (or subnet mask).
Can be any IPv4 address that is permitted by the ''IPAddress'' data type.</description>
    <size maxLength="15"/>
  </dataType>
  <dataType xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="IPv6Address" base="IPAddress">
    <description>IPv6 address.
Can be any IPv6 address that is permitted by the ''IPAddress'' data type.</description>
  </dataType>
  <dataType xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Alias">
    <description>A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.
If the CPE supports the Alias-based Addressing feature as defined in {{bibref|TR-069a4|3.6.1}} and described in {{bibref|TR-069a4|Appendix II}}, the following mandatory constraints MUST be enforced:
*Its value MUST NOT be empty.
*Its value MUST start with a letter.
*If its instance object is created by the CPE, the initial value MUST start with a "cpe-" prefix.
*The CPE MUST NOT change the parameter value.</description>
    <string>
      <size maxLength="64"/>
    </string>
  </dataType>
  <dataType xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="MACAddress">
    <description>All MAC addresses are represented as strings of 12 hexadecimal digits (digits 0-9, letters A-F or a-f) displayed as six pairs of digits separated by colons.  Unspecified or inapplicable MAC addresses MUST be represented as empty strings unless otherwise specified by the parameter definition.</description>
    <string>
      <size maxLength="17"/>
      <pattern value=""/>
      <pattern value="([0-9A-Fa-f][0-9A-Fa-f]:){5}([0-9A-Fa-f][0-9A-Fa-f])"/>
    </string>
  </dataType>
  <dataType xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="IPPrefix">
    <description>IPv4 or IPv6 routing prefix in Classless Inter-Domain Routing (CIDR) notation {{bibref|RFC4632}}. This is specified as an IP address followed by an appended "/n" suffix, where ''n'' (the prefix size) is an integer in the range 0-32 (for IPv4) or 0-128 (for IPv6) that indicates the number of (leftmost) '1' bits of the routing prefix. 
IPv4 example: 192.168.1.0/24
IPv6 example: 2001:edff:fe6a:f76::/64
Unspecified or inapplicable IP prefixes MUST be represented as empty strings unless otherwise specified by the parameter definition.</description>
    <string>
      <size maxLength="49"/>
    </string>
  </dataType>
  <dataType xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="IPAddress">
    <description>IP address, i.e. IPv4 address (or IPv4 subnet mask) or IPv6 address.
All IPv4 addresses and subnet masks MUST be represented as strings in IPv4 dotted-decimal notation.  Here are some examples of valid IPv4 address textual representations:
* 216.52.29.100
* 192.168.1.254
All IPv6 addresses MUST be represented using any of the 3 standard textual representations defined in {{bibref|RFC4291}} Sections 2.2.1, 2.2.2 and 2.2.3.  Both lower-case and upper-case letters can be used, but use of lower-case letters is RECOMMENDED.  Here are some examples of valid IPv6 address textual representations:
* 1080:0:0:800:ba98:3210:11aa:12dd
* 1080::800:ba98:3210:11aa:12dd
* 0:0:0:0:0:0:13.1.68.3
IPv6 addresses MUST NOT include zone identifiers. Zone identifiers are discussed in {{bibref|RFC4007|Section 6}}.
Unspecified or inapplicable addresses (or IPv4 subnet masks) MUST be represented as empty strings unless otherwise specified by the parameter definition.</description>
    <string>
      <size maxLength="45"/>
    </string>
  </dataType>
  <dataType xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Dbm1000">
    <description>The value is measured in ''dBm/1000'', i.e. the value divided by 1000 is dB relative to 1 mW.  For example, -12345 means -12.345 dBm, 0 means 0 dBm (1 mW) and 12345 means 12.345 dBm.</description>
    <int/>
  </dataType>
  <dataType xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="IPv6Prefix" base="IPPrefix">
    <description>IPv6 address prefix.
Can be any IPv6 prefix that is permitted by the ''IPPrefix'' data type.</description>
  </dataType>
  <dataType xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="IPv4Prefix" base="IPPrefix">
    <description>IPv4 address prefix. 
Can be any IPv4 prefix that is permitted by the ''IPPrefix'' data type.</description>
    <size maxLength="18"/>
  </dataType>
  <dataType xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="StatsCounter64">
    <description>A 64-bit statistics parameter, e.g. a byte counter.
This data type SHOULD be used for all statistics parameters whose values might become greater than the maximum value that can be represented as an ''unsignedInt''.
The maximum value that can be represented as an ''unsignedLong'' (i.e. 0xffffffffffffffff) indicates that no data is available for this parameter.
The term ''packet'' is to be interpreted as the transmission unit appropriate to the protocol layer in question, e.g. an IP packet or an Ethernet frame.</description>
    <unsignedLong/>
  </dataType>
  <dataType xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="StatsCounter32">
    <description>A 32-bit statistics parameter, e.g. a byte counter.
This data type SHOULD NOT be used for statistics parameters whose values might become greater than the maximum value that can be represented as an ''unsignedInt'' (i.e. 0xffffffff, referred to below as ''maxval''). ''StatsCounter64'' SHOULD be used for such parameters.
The value ''maxval'' indicates that no data is available for this parameter.  In the unlikely event that the actual value of the statistic is ''maxval'', the CPE SHOULD return ''maxval - 1''.
The actual value of the statistic might be greater than ''maxval''. Such values SHOULD wrap around through zero.
The term ''packet'' is to be interpreted as the transmission unit appropriate to the protocol layer in question, e.g. an IP packet or an Ethernet frame.</description>
    <unsignedInt/>
  </dataType>
  <model name="Device:2.4">
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>The top-level object for a Device.</description>
      <parameter name="InterfaceStackNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.DNS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>Properties for Domain Name Service (DNS). It contains the {{object|Client}}, {{object|Relay}}, and {{object|Diagnostics}} objects.</description>
      <parameter name="SupportedRecordTypes" access="readOnly" dmr:version="2.2">
        <description>The DNS record types that are supported by the device. {{enum}}</description>
        <syntax>
          <list/>
          <string>
            <enumeration value="A">
              <description>{{bibref|RFC1035}}</description>
            </enumeration>
            <enumeration value="AAAA">
              <description>{{bibref|RFC3596}}</description>
            </enumeration>
            <enumeration value="SRV">
              <description>{{bibref|RFC2782}}</description>
            </enumeration>
            <enumeration value="PTR">
              <description>{{bibref|RFC1035}}</description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.DNS.Client." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>Client properties for Domain Name Service (DNS). The DNS client resolves FQDN on behalf of device internal (client) applications.</description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>Enables or disables the DNS client.</description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>The status of the DNS client. {{enum}}
The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.</description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ServerNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.DNS.Client.Server.{i}." access="readWrite" numEntriesParameter="ServerNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>This table contains the DNS Server IP address to be used by the DHCP Client (it does ''not'' model a DNS Server). Entries are either automatically created as result of DHCP (v4 or v6), IPCP, or RA received DNS server information, or are statically configured by the ACS.</description>
      <uniqueKey>
        <parameter ref="DNSServer"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>Enables or disables this entry.</description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>The status of this entry.  {{enum}}
The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.</description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>{{datatype|expand}}</description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="DNSServer" access="readWrite" dmr:version="2.0">
        <description>DNS server IP addresses.
Note: {{param}} is only writable when {{param|Type}} is {{enum|Static|Type}}; otherwise, {{param}} is automatically configured as result of DHCP, IPCP, or RA received DNS server information.</description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>{{reference}} This parameter specifies the IP interface over which the DNS query is sent.
If {{empty}} is specified, the CPE MUST use its routing policy (Forwarding table entries), if necessary, to determine the appropriate interface.
Note: {{param}} is only writable when {{param|Type}} is {{enum|Static|Type}}; otherwise, {{param}} is automatically configured as result of DHCP, IPCP, or RA received DNS server information.</description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Type" access="readOnly" dmr:version="2.0">
        <description>Method used to assign the {{param|DNSServer}} address.  {{enum}}
Table entries that are automatically created as result of DHCP, IPCP, or RA received DNS server information will have {{param}} set to {{enum|DHCPv4}}, {{enum|DHCPv6}}, {{enum|IPCP}}, or {{enum|RouterAdvertisement}}, as the case may be. Manually created table entires will have their {{param}} set to {{enum|Static}}.</description>
        <syntax>
          <string>
            <enumeration value="DHCP" status="deprecated">
              <description>Replaced by {{enum|DHCPv4}}.</description>
            </enumeration>
            <enumeration value="DHCPv4"/>
            <enumeration value="DHCPv6"/>
            <enumeration value="RouterAdvertisement"/>
            <enumeration value="IPCP"/>
            <enumeration value="Static"/>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.DeviceInfo." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>This object contains general device information.</description>
      <parameter name="Manufacturer" access="readOnly" dmr:version="2.0">
        <description>The manufacturer of the CPE (human readable string).</description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ManufacturerOUI" access="readOnly" dmr:version="2.0">
        <description>Organizationally unique identifier of the device manufacturer.  Represented as a six hexadecimal-digit value using all upper-case letters and including any leading zeros.  {{pattern}}
The value MUST be a valid OUI as defined in {{bibref|OUI}}.
This value MUST remain fixed over the lifetime of the device, including across firmware updates. Any change would indicate that it's a new device and would therefore require a BOOTSTRAP Inform.</description>
        <syntax>
          <string>
            <size minLength="6" maxLength="6"/>
            <pattern value="[0-9A-F]{6}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModelName" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>Model name of the CPE (human readable string).</description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Description" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>A full description of the CPE device (human readable string).</description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SerialNumber" access="readOnly" dmr:version="2.0">
        <description>Identifier of the particular device that is unique for the indicated class of product and manufacturer.
This value MUST remain fixed over the lifetime of the device, including across firmware updates. Any change would indicate that it's  a new device and would therefore require a BOOTSTRAP Inform.</description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HardwareVersion" access="readOnly" forcedInform="true" dmr:version="2.0">
        <description>A string identifying the particular CPE model and version.</description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SoftwareVersion" access="readOnly" activeNotify="forceEnabled" forcedInform="true" dmr:version="2.0">
        <description>A string identifying the software version currently installed in the CPE (i.e. version of the overall CPE  firmware).
To allow version comparisons, this element SHOULD be in the form of dot-delimited integers, where each successive integer represents  a more minor category of variation.  For example, ''3.0.21'' where the components mean: ''Major.Minor.Build''.</description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProvisioningCode" access="readWrite" activeNotify="forceEnabled" forcedInform="true" dmr:version="2.0">
        <description>Identifier of the primary service provider and other provisioning information, which MAY be used by the ACS to  determine service provider-specific customization and provisioning parameters.</description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UpTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>Time in {{units}} since the CPE was last restarted.</description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.Ethernet." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>Ethernet object. This object models several Ethernet interface objects, each representing a different stack layer, including: {{object|Interface}}, {{object|Link}}, and {{object|VLANTermination}}. {{object|Interface}} is media-specific and models a port, the PHY layer, and the MAC layer. {{object|Link}} is media-independent and models the Logical Link Control (LLC) layer. A {{object|VLANTermination}}, when present, is expected to be stacked on top of {{object|Link}} objects to receive and send frames with a configured VLANID.</description>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LinkNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.Ethernet.Interface.{i}." access="readOnly" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0" dmr:fixedObject="true">
      <description>Ethernet interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). This table models physical Ethernet ports, but in terms of the interface stack it also models the PHY and MAC level Ethernet interface.</description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>Enables or disables the interface.
This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.</description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface). 
When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.</description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>{{datatype|expand}}</description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>The textual name of the interface as assigned by the CPE.</description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The accumulated time in {{units}} since the interface entered its current operational state.</description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Upstream" access="readOnly" dmr:version="2.0">
        <description>Indicates whether the interface points towards the Internet ({{true}}) or towards End Devices ({{false}}).
For example:
* For an Internet Gateway Device, {{param}} will be {{true}} for all WAN interfaces and {{false}} for all LAN interfaces.
* For a standalone WiFi Access Point that is connected via Ethernet to an Internet Gateway Device, {{param}} will be {{true}} for the Ethernet interface and {{false}} for the WiFi Radio interface.
* For an End Device, {{param}} will be {{true}} for all interfaces.</description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>The MAC Address of the interface. 
Note: This is not necessarily the same as the Ethernet header source or destination MAC address, which is associated with the IP interface and is modeled via the {{param|.Ethernet.Link.{i}.MACAddress}} parameter.</description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readWrite" dmr:version="2.0">
        <description>The maximum upstream and downstream PHY bit rate supported by this interface (expressed in {{units}}).
A value of -1 indicates automatic selection of the maximum bit rate.</description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="Mbps"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="DuplexMode" access="readWrite" dmr:version="2.0">
        <description>The duplex mode available to this connection.</description>
        <syntax>
          <string>
            <enumeration value="Half"/>
            <enumeration value="Full"/>
            <enumeration value="Auto"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.Ethernet.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>Throughput statistics for this interface.
The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.</description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of bytes transmitted out of the interface, including framing characters.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of bytes received on the interface, including framing characters.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets transmitted out of the interface.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets received on the interface.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of outbound packets that could not be transmitted because of errors.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.Ethernet.Link.{i}." access="readWrite" numEntriesParameter="LinkNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>Ethernet link layer table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). Table entries model the Logical Link Control (LLC) layer. It is expected that an ''Ethernet Link'' interface can be stacked above any lower-layer interface object capable of carrying Ethernet frames.</description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>Enables or disables the link.
This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.</description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>The current operational state of the link (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface). 
When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.</description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Down"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>{{datatype|expand}}</description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>The textual name of the link as assigned by the CPE.</description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The accumulated time in {{units}} since the link entered its current operational state.</description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>{{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.</description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>The MAC address used for packets sent via this interface. Provides the source MAC address for outgoing traffic and the destination MAC address for incoming traffic.</description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.Ethernet.Link.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>Throughput statistics for this interface.
The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.</description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of bytes transmitted out of the interface, including framing characters.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of bytes received on the interface, including framing characters.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets transmitted out of the interface.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets received on the interface.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of outbound packets that could not be transmitted because of errors.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.Hosts." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>This object provides information about each of the hosts on the LAN, including those whose IP address was allocated by the CPE using DHCP as well as hosts with statically allocated IP addresses. It can also include non-IP  hosts.</description>
      <parameter name="HostNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.Hosts.Host.{i}." access="readOnly" numEntriesParameter="HostNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>Host table.</description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="PhysAddress"/>
      </uniqueKey>
      <parameter name="PhysAddress" access="readOnly" dmr:version="2.0">
        <description>Unique physical identifier of the host. For many layer 2 technologies this is typically a MAC address.</description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IPAddress" access="readOnly" dmr:version="2.0">
        <description>Current IP Address of the host. {{empty}} if no address is available.
If more than one IP address for this host is known, the CPE will choose a ''primary'' address.  All known IP addresses can be listed in the {{object|IPv4Address}} and {{object|IPv6Address}} tables.</description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="AddressSource" access="readOnly" status="deprecated" dmr:version="2.0">
        <description>Indicates whether the IP address of the host was allocated by the CPE using DHCP, was assigned to the host statically, or was assigned using automatic IP address allocation.  {{enum}}
This parameter is DEPRECATED because only {{enum|None}} and {{enum|DHCP}} made sense (the CPE doesn't know whether the address is {{enum|Static}} or {{enum|AutoIP}}).  The {{enum|DHCP}} case is now handled via the {{param|DHCPClient}} reference.</description>
        <syntax>
          <string>
            <enumeration value="DHCP"/>
            <enumeration value="Static"/>
            <enumeration value="AutoIP"/>
            <enumeration value="None"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LeaseTimeRemaining" access="readOnly" status="deprecated" dmr:version="2.0">
        <description>DHCP lease time remaining in {{units}}.  A value of -1 indicates an infinite lease.  The value MUST be 0 (zero) if the {{param|AddressSource}} is not {{enum|DHCP|AddressSource}}.
This parameter is DEPRECATED because DHCP lease/lifetime information can be accessed via the {{param|DHCPClient}} reference.</description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="Layer1Interface" access="readOnly" dmr:version="2.0">
        <description>{{noreference}}The value MUST be the path name of a row in a layer 1 interface table. 
For example: ''Device.Ethernet.Interface.2''</description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Layer3Interface" access="readOnly" dmr:version="2.0">
        <description>{{reference}}  If the entry represents a non-IP device, then {{param}} will be {{empty}}.</description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HostName" access="readOnly" dmr:version="2.0">
        <description>The device's host name or {{empty}} if unknown.</description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" dmr:version="2.0">
        <description>Whether or not the host is currently present on the LAN.  The method of presence detection is a local matter to  the CPE.
The ability to list inactive hosts is OPTIONAL.  If the CPE includes inactive hosts in this table, {{param}} MUST be set to {{false}}  for each inactive host.  The length of time an inactive host remains listed in this table is a local matter to the CPE.</description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.IP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>IP object that contains the {{object|Interface}}, {{object|ActivePort}}, and {{object|Diagnostics}} objects.</description>
      <parameter name="IPv6Capable" access="readOnly" dmr:version="2.2">
        <description>Indicates whether the device is IPv6 capable.
Note: If {{false}}, it is expected that IPv6-related parameters, enumeration values, etc will not be implemented by the device.</description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6Enable" access="readWrite" dmr:version="2.2">
        <description>Enables or disables the IPv6 stack, and so the use of IPv6 on the device. This affects only layer 3 and above.
When {{false}}, IP interfaces that had been operationally up and passing IPv6 packets will now no longer be able to do so, and will be operationally down (unless also attached to an enabled IPv4 stack).</description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6Status" access="readOnly" dmr:version="2.2">
        <description>Indicates the status of the IPv6 stack.  {{enum}}
The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.</description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ULAPrefix" access="readWrite" dmr:version="2.2">
        <description>The ULA /48 prefix {{bibref|RFC4193|Section 3}}.</description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
        </syntax>
      </parameter>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.IP.Diagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>The IP Diagnostics object.</description>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.IP.Diagnostics.IPPing." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>This object provides access to an IP-layer ping test.</description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>Indicates availability of diagnostic data.  {{enum}}
If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When  writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in  this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the  {{param}} to {{enum|Requested}}.
When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
When the test is completed, the value of this parameter MUST be either {{enum|Complete}} (if the test completed successfully), or one  of the ''Error'' values listed above.
If the value of this parameter is anything other than {{enum|Complete}}, the values of the results parameters for this test are  indeterminate.
When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to  allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by  the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result  parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to  {{enum|None}}.
While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test  being terminated and the value of this parameter being set to {{enum|None}}.
While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this  object) MUST result in the test being terminated and then restarted using the current values of the test parameters.</description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error_CannotResolveHostName" access="readOnly"/>
            <enumeration value="Error_Internal" access="readOnly"/>
            <enumeration value="Error_Other" access="readOnly"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>{{reference}} The IP-layer interface over which the test is to be performed. This identifies the source IP address to use when performing the test. Example: Device.IP.Interface.1 
If {{empty}} is specified, the CPE MUST use the interface as directed by its routing policy (''Forwarding'' table entries) to determine the appropriate interface.</description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetParent=".IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readWrite" dmr:version="2.0">
        <description>Host name or address of the host to ping.
In the case where {{param}} is specified by name, and the name resolves to more than one address, it is up to the device implementation to choose which address to use.</description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NumberOfRepetitions" access="readWrite" dmr:version="2.0">
        <description>Number of repetitions of the ping test to perform before reporting the results.</description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Timeout" access="readWrite" dmr:version="2.0">
        <description>Timeout in {{units}} for the ping test.</description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DataBlockSize" access="readWrite" dmr:version="2.0">
        <description>Size of the data block in bytes to be sent for each ping.</description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" dmr:version="2.0">
        <description>DiffServ codepoint to be used for the test packets.  By default the CPE SHOULD set this value to  zero.</description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="63"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SuccessCount" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>Result parameter indicating the number of successful pings (those in which a successful response was received  prior to the timeout) in the most recent ping test.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FailureCount" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>Result parameter indicating the number of failed pings in the most recent ping test.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AverageResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>Result parameter indicating the average response time in {{units}} over all repetitions with successful  responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.</description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MinimumResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>Result parameter indicating the minimum response time in {{units}} over all repetitions with successful  responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.</description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaximumResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>Result parameter indicating the maximum response time in {{units}} over all repetitions with successful  responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.</description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.IP.Diagnostics.TraceRoute." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>This object is defines access to an IP-layer trace-route test for the specified IP interface.</description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>Indicates availability of diagnostic data.  {{enum}}
If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When  writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in  this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the  {{param}} to {{enum|Requested}}.
When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to  allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.</description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error_CannotResolveHostName" access="readOnly"/>
            <enumeration value="Error_MaxHopCountExceeded" access="readOnly"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>{{reference}} The IP-layer interface over which the test is to be performed. This identifies the source IP address to use when performing the test. 
Example: Device.IP.Interface.1</description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetParent=".IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readWrite" dmr:version="2.0">
        <description>Host name or address of the host to find a route to.
In the case where {{param}} is specified by name, and the name resolves to more than one address, it is up to the device implementation to choose which address to use.</description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NumberOfTries" access="readWrite" dmr:version="2.0">
        <description>Number of tries per hop. Set prior to running Diagnostic.  By default, the CPE SHOULD set this value to  3.</description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="3"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Timeout" access="readWrite" dmr:version="2.0">
        <description>Timeout in {{units}} for each hop of the trace route test.  By default the CPE SHOULD set this value to 5000.</description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DataBlockSize" access="readWrite" dmr:version="2.0">
        <description>Size of the data block in bytes to be sent for each trace route.  By default, the CPE SHOULD set this value to  38.</description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" dmr:version="2.0">
        <description>DiffServ codepoint to be used for the test packets.  By default the CPE SHOULD set this value to  0.</description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="63"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaxHopCount" access="readWrite" dmr:version="2.0">
        <description>The maximum number of hop used in outgoing probe packets (max TTL).  By default the CPE SHOULD set this value to  30.</description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="64"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>Result parameter indicating the response time in {{units}} the most recent trace route test.  If a route  could not be determined, this value MUST be zero.</description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RouteHopsNumberOfEntries" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.IP.Diagnostics.TraceRoute.RouteHops.{i}." access="readOnly" numEntriesParameter="RouteHopsNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0" dmr:noUniqueKeys="true">
      <description>Contains the array of hop results returned. If a route could not be determined, this array will be empty</description>
      <parameter name="Host" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>Result parameter indicating the Host Name if DNS is able to resolve or IP Address of a hop along the discovered  route.</description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HostAddress" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>If this parameter is not {{empty}} it will contain the last IP address of the host returned for this hop and the  {{param|Host}} will contain the Host Name returned from the reverse DNS query.</description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ErrorCode" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>Contains the error code returned for this hop. This code is directly from the ICMP CODE field.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RTTimes" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>{{list}} Each list item contains one or more round trip times in {{units}} (one for each repetition) for this hop.</description>
        <syntax>
          <list>
            <size maxLength="16"/>
          </list>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.IP.Interface.{i}." access="readWrite" numEntriesParameter="InterfaceNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>IP interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). This table models the layer 3 IP interface.
Each IP interface can be attached to the IPv4 and/or IPv6 stack.  The interface's IP addresses and prefixes are listed in the {{object|IPv4Address}}, {{object|IPv6Address}} and {{object|IPv6Prefix}} tables.
Note that support for manipulating {{param|Loopback}} interfaces is OPTIONAL, so the implementation MAY choose not to create (or allow the ACS to create) {{object}} instances of type {{enum|Loopback|Type}}.
When the ACS administratively disables the interface, i.e. sets {{param|Enable}} to {{false}}, the interface's automatically-assigned IP addresses and prefixes MAY be retained.  When the ACS administratively enables the interface, i.e. sets {{param|Enable}} to {{true}}, these IP addresses and prefixes MUST be refreshed.  It's up to the implementation to decide exactly what this means: it SHOULD take all reasonable steps to refresh everything but if it is unable, for example, to refresh a prefix that still has a significant lifetime, it might well choose to retain rather than discard it.</description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>Enables or disables the interface (regardless of {{param|IPv4Enable}} and {{param|IPv6Enable}}).
This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.</description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="IPv6Enable" access="readWrite" dmr:version="2.2">
        <description>If set to {{true}}, attaches this interface to the IPv6 stack.  If set to {{false}}, detaches this interface from the IPv6 stack.
Once detached from the IPv6 stack, the interface will now no longer be able to pass IPv6 packets, and will be operationally down (unless also attached to an enabled IPv4 stack).
For an IPv6 capable device, if {{param}} is not present this interface SHOULD be permanently attached to the IPv6 stack.
Note that {{param}} is independent of {{param|Enable}}, and that to administratively enable an interface for IPv6 it is necessary for both {{param|Enable}} and {{param}} to be {{true}}.</description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ULAEnable" access="readWrite" dmr:version="2.2">
        <description>Controls whether or not ULAs {{bibref|RFC4193}} are generated and used on this interface.</description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface). 
When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.</description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Down"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>{{datatype|expand}}</description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>The textual name of the interface as assigned by the CPE.</description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The accumulated time in {{units}} since the interface entered its current operational state.</description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>{{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
{{param}} MUST be {{empty}} and read-only when {{param|Type}} is {{enum|Loopback|Type}}, {{enum|Tunnel|Type}}, or {{enum|Tunneled|Type}}.</description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Reset" access="readWrite" dmr:version="2.0">
        <description>When set to {{true}}, the device MUST tear down the existing IP connection represented by this object and establish a new one.  
The device MUST initiate the reset after completion of the current CWMP session.  The device MAY delay resetting the connection in order to avoid interruption of a user service such as an ongoing voice call.
Reset on a disabled interface is a no-op (not an error).</description>
        <syntax command="true">
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Type" access="readOnly" dmr:version="2.0">
        <description>IP interface type. {{enum}}
For {{enum|Loopback}}, {{enum|Tunnel}}, and {{enum|Tunneled}} IP interface objects, the {{param|LowerLayers}} parameter MUST be {{empty}}.</description>
        <syntax>
          <string>
            <enumeration value="Normal"/>
            <enumeration value="Loopback"/>
            <enumeration value="Tunnel"/>
            <enumeration value="Tunneled"/>
          </string>
          <default type="object" value="Normal"/>
        </syntax>
      </parameter>
      <parameter name="IPv4AddressNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IPv6AddressNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IPv6PrefixNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.IP.Interface.{i}.IPv4Address.{i}." access="readWrite" numEntriesParameter="IPv4AddressNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>IPv4 address table. Entries are auto-created and auto-deleted as IP addresses are added and deleted via DHCP, auto-IP, or IPCP. Static entries are created and configured by the ACS.</description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="IPAddress"/>
        <parameter ref="SubnetMask"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>Enables or disables this IPv4 address.</description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>The status of this {{object}} table entry.  {{enum}}
The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.</description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>{{datatype|expand}}
This parameter can only be modified if {{param|AddressingType}} is {{enum|Static|AddressingType}}.</description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="IPAddress" access="readWrite" dmr:version="2.0">
        <description>IPv4 address.
This parameter can only be modified if the {{param|AddressingType}} is {{enum|Static|AddressingType}}.</description>
        <syntax>
          <dataType ref="IPv4Address"/>
        </syntax>
      </parameter>
      <parameter name="SubnetMask" access="readWrite" dmr:version="2.0">
        <description>Subnet mask.
This parameter can only be modified if the {{param|AddressingType}} is {{enum|Static|AddressingType}}.</description>
        <syntax>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AddressingType" access="readOnly" dmr:version="2.0">
        <description>Addressing method used to assign the IP address. {{enum}}</description>
        <syntax>
          <string>
            <enumeration value="DHCP"/>
            <enumeration value="AutoIP"/>
            <enumeration value="IPCP"/>
            <enumeration value="Static"/>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.IP.Interface.{i}.IPv6Address.{i}." access="readWrite" numEntriesParameter="IPv6AddressNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>This table contains the IP interface's IPv6 unicast addresses.  There MUST be an entry for each such address, including anycast addresses.
There are several ways in which entries can be added to and deleted from this table, including:
* Automatically via SLAAC {{bibref|RFC4862}}, which covers generation of link-local addresses (for all types of device) and global addresses (for non-router devices).
* Automatically via DHCPv6 {{bibref|RFC3315}}, which covers generation of any type of address (subject to the configured DHCP server policy).
* Manually via a GUI or some other local management interface.
* Manually via factory default configuration.
* By the ACS.
This table MUST NOT include entries for the Subnet-Router anycast address {{bibref|RFC4291|Section 2.6.1}}.  Such entries would be identical to others but with a zero interface identifier, and would add no value.
A loopback interface will always have address ''::1'' {{bibref|RFC4291|Section 2.5.3}} and MAY also have link-local address ''fe80::1''.
This object is based on ''ipAddressTable'' from {{bibref|RFC4293}}.</description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="IPAddress"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>Enables or disables this {{object}} entry.</description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>The status of this {{object}} table entry.  {{enum}}
The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.</description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="IPAddressStatus" access="readOnly" dmr:version="2.2">
        <description>The status of {{param|IPAddress}}, indicating whether it can be used for communication.  See also {{param|PreferredLifetime}} and {{param|ValidLifetime}}.  {{enum}}
This parameter is based on ''ipAddressStatus'' and ''ipAddressStatusTC'' from {{bibref|RFC4293}}.</description>
        <syntax>
          <string>
            <enumeration value="Preferred">
              <description>Valid address that can appear as the destination or source address of a packet.</description>
            </enumeration>
            <enumeration value="Deprecated">
              <description>Valid but deprecated address that is not intended to be used as a source address.</description>
            </enumeration>
            <enumeration value="Invalid">
              <description>Invalid address that is not intended to appear as the destination or source address of a packet.</description>
            </enumeration>
            <enumeration value="Inaccessible">
              <description>Valid address that is not accessible because the interface to which it is assigned is not operational.</description>
            </enumeration>
            <enumeration value="Unknown">
              <description>Address status cannot be determined for some reason.</description>
            </enumeration>
            <enumeration value="Tentative">
              <description>The uniqueness of the address on the link is being verified.</description>
            </enumeration>
            <enumeration value="Duplicate">
              <description>Invalid address that has been determined to be non-unique on the link.</description>
            </enumeration>
            <enumeration value="Optimistic">
              <description>Valid address that is available for use, subject to restrictions, while its uniqueness on a link is being verified.</description>
            </enumeration>
          </string>
          <default type="object" value="Invalid"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>{{datatype|expand}}
This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.</description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="IPAddress" access="readWrite" dmr:version="2.2">
        <description>IPv6 address.
This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.
This parameter is based on ''ipAddressAddr'' from {{bibref|RFC4293}}.</description>
        <syntax>
          <dataType ref="IPv6Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Origin" access="readOnly" dmr:version="2.2">
        <description>Mechanism via which the IP address was assigned.  {{enum}}
This parameter is based on ''ipOrigin'' from {{bibref|RFC4293}}.</description>
        <syntax>
          <string>
            <enumeration value="AutoConfigured">
              <description>Automatically generated. For example, a link-local address as specified by SLAAC {{bibref|RFC4862|Section 5.3}}, a global address as specified by SLAAC {{bibref|RFC4862|Section 5.5}}, or generated via CPE logic (e.g. from delegated prefix as specified by {{bibref|RFC3633}}), or from ULA /48 prefix as specified by {{bibref|RFC4193}}.</description>
            </enumeration>
            <enumeration value="DHCPv6">
              <description>Assigned by DHCPv6 {{bibref|RFC3315}}.</description>
            </enumeration>
            <enumeration value="WellKnown">
              <description>Specified by a standards organization, e.g. the ''::1'' loopback address, which is defined in {{bibref|RFC4291}}.</description>
            </enumeration>
            <enumeration value="Static">
              <description>For example, present in the factory default configuration (but not {{enum|WellKnown}}), created by the ACS, or created by some other management entity (e.g. via a GUI).</description>
            </enumeration>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
      <parameter name="Prefix" access="readWrite" dmr:version="2.2">
        <description>IPv6 address prefix.
Some addresses, e.g. addresses assigned via the DHCPv6 IA_NA option, are not associated with a prefix, and some {{enum|WellKnown|#.IPv6Prefix.{i}.Origin}} prefixes might not be modeled.  In both of these cases {{param}} will be {{null}}.
This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.
This parameter is based on ''ipAddressPrefix'' from {{bibref|RFC4293}}.</description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.IPv6Prefix." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PreferredLifetime" access="readWrite" dmr:version="2.2">
        <description>The time at which this address will cease to be preferred (i.e. will become deprecated), or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.</description>
        <syntax>
          <dateTime/>
          <default type="object" value="9999-12-31T23:59:59Z"/>
        </syntax>
      </parameter>
      <parameter name="ValidLifetime" access="readWrite" dmr:version="2.2">
        <description>The time at which this address will cease to be valid (i.e. will become invalid), or {{null}} if unknown. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.</description>
        <syntax>
          <dateTime/>
          <default type="object" value="9999-12-31T23:59:59Z"/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.IP.Interface.{i}.IPv6Prefix.{i}." access="readWrite" numEntriesParameter="IPv6PrefixNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>This table contains the interface's IPv6 prefixes.  There MUST be an entry for each such prefix, not only for prefixes learned from router advertisements.
There are several ways in which entries can be added to and deleted from this table, including:
* Automatically via {{bibref|RFC4861}} Router Advertisements.  See also {{object|.RouterAdvertisement}}.
* Automatically via DHCPv6 {{bibref|RFC3315}} prefix delegation {{bibref|RFC3633}}.  See also {{object|.DHCPv6.Client}}.
* Automatically via internal CPE logic, e.g. creation of child prefixes derived from a parent prefix.
* Manually via a GUI or some other local management interface.
* Manually via factory default configuration.
* By the ACS.
The CPE MAY choose not to create {{object}} entries for {{enum|WellKnown|Origin}} prefixes or for the ULA /48 prefix {{bibref|RFC4193}}. If an {{object}} entry exists for the ULA /48 prefix, it MUST be on a downstream interface (i.e. an interface for which the physical layer interface object has ''Upstream'' = {{false}}).
This object is based on ''ipAddressPrefixTable'' from {{bibref|RFC4293}}.</description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Prefix"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>Enables or disables this {{object}} entry.</description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>The status of this {{object}} table entry.  {{enum}}
The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.</description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="PrefixStatus" access="readOnly" dmr:version="2.2">
        <description>The status of {{param|Prefix}}, indicating whether it can be used for communication.  See also {{param|PreferredLifetime}} and {{param|ValidLifetime}}.  {{enum}}
This parameter is based on ''ipAddressStatus'' and ''ipAddressStatusTC'' from {{bibref|RFC4293}}.</description>
        <syntax>
          <string>
            <enumeration value="Preferred">
              <description>Valid prefix.</description>
            </enumeration>
            <enumeration value="Deprecated">
              <description>Valid but deprecated prefix.</description>
            </enumeration>
            <enumeration value="Invalid">
              <description>Invalid prefix.</description>
            </enumeration>
            <enumeration value="Inaccessible">
              <description>Valid prefix that is not accessible because the interface to which it is assigned is not operational.</description>
            </enumeration>
            <enumeration value="Unknown">
              <description>Prefix status cannot be determined for some reason.</description>
            </enumeration>
          </string>
          <default type="object" value="Invalid"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>{{datatype|expand}}
This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.</description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Prefix" access="readWrite" dmr:version="2.2">
        <description>IPv6 address prefix.
This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.
This parameter is based on ''ipAddressPrefixPrefix'' from {{bibref|RFC4293}}.</description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Origin" access="readOnly" dmr:version="2.2">
        <description>Mechanism via which the prefix was assigned or most recently updated. {{enum}}
Note that:
* {{enum|PrefixDelegation}} and {{enum|RouterAdvertisement}} prefixes can exist only on upstream interfaces (i.e. interfaces for which the physical layer interface object has ''Upstream'' = {{true}}),
* {{enum|AutoConfigured}} and {{enum|WellKnown}} prefixes can exist on any interface, and
* {{enum|Static}} and {{enum|Child}} prefixes can exist only on downstream interfaces (i.e. interfaces for which the physical layer interface object has ''Upstream'' = {{false}}).
Also note that a {{enum|Child}} prefix's {{param|ParentPrefix}} will always be an {{enum|AutoConfigured}}, {{enum|PrefixDelegation}}, or {{enum|RouterAdvertisement}} prefix.
This parameter is based on ''ipAddressOrigin'' from {{bibref|RFC4293}}.</description>
        <syntax>
          <string>
            <enumeration value="AutoConfigured">
              <description>Generated via internal CPE logic (e.g. the ULA /48 prefix) or derived from an internal prefix that is not modeled in any {{object}} table.</description>
            </enumeration>
            <enumeration value="PrefixDelegation">
              <description>Delegated via DHCPv6 {{bibref|RFC3633}} or some other protocol, e.g. IPv6rd {{bibref|RFC5969}}.  Also see {{param|StaticType}}.</description>
            </enumeration>
            <enumeration value="RouterAdvertisement">
              <description>Discovered via router advertisement {{bibref|RFC4861}} Prefix Information Option.</description>
            </enumeration>
            <enumeration value="WellKnown">
              <description>Specified by a standards organization, e.g. ''fe80::/10'' for link-local addresses, or ''::1/128'' for the loopback address, both of which are defined in {{bibref|RFC4291}}.</description>
            </enumeration>
            <enumeration value="Static">
              <description>Created by the ACS, by some other management entity (e.g. via a GUI), or present in the factory default configuration (but not {{enum|WellKnown}}).  Unrelated to any shorter length prefix that might exist on the CPE.  Also see {{param|StaticType}}.  Can be used for RA (Prefix Information), DHCPv6 address assignment (IA_NA) or DHCPv6 prefix delegation (IA_PD).</description>
            </enumeration>
            <enumeration value="Child">
              <description>Derived from an associated {{enum|AutoConfigured}} or {{enum|PrefixDelegation}} parent prefix.  Also see {{param|StaticType}}, {{param|ParentPrefix}} and {{param|ChildPrefixBits}}.  Can be used for RA (Prefix Information), DHCPv6 address assignment (IA_NA) or DHCPv6 prefix delegation (IA_PD).</description>
            </enumeration>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
      <parameter name="OnLink" access="readWrite" dmr:version="2.2">
        <description>On-link flag {{bibref|RFC4861|Section 4.6.2}} as received (in the RA) for RouterAdvertisement.  Indicates whether this prefix can be used for on-link determination.
This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
This parameter is based on ''ipAddressPrefixOnLinkFlag'' from {{bibref|RFC4293}}.</description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Autonomous" access="readWrite" dmr:version="2.2">
        <description>Autonomous address configuration flag {{bibref|RFC4861|Section 4.6.2}} as received (in the RA) for RouterAdvertisement.  Indicates whether this prefix can be used for generating global addresses as specified by SLAAC {{bibref|RFC4862}}.
This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
This parameter is based on ''ipAddressPrefixAutonomousFlag'' from {{bibref|RFC4293}}.</description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PreferredLifetime" access="readWrite" dmr:version="2.2">
        <description>This parameter is based on ''ipAddressPrefixAdvPreferredLifetime'' from {{bibref|RFC4293}}. The time at which this prefix will cease to be preferred (i.e. will become deprecated), or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.</description>
        <syntax>
          <dateTime/>
          <default type="object" value="9999-12-31T23:59:59Z"/>
        </syntax>
      </parameter>
      <parameter name="ValidLifetime" access="readWrite" dmr:version="2.2">
        <description>This parameter is based on ''ipAddressPrefixAdvValidLifetime'' from {{bibref|RFC4293}}.  The time at which this prefix will cease to be valid (i.e. will become invalid), or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.</description>
        <syntax>
          <dateTime/>
          <default type="object" value="9999-12-31T23:59:59Z"/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.IP.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>Throughput statistics for this interface.
The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.</description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of bytes transmitted out of the interface, including framing characters.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of bytes received on the interface, including framing characters.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets transmitted out of the interface.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets received on the interface.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of outbound packets that could not be transmitted because of errors.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" dmr:version="2.0">
        <description>The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
Note that IPv6 does not define broadcast addresses, so IPv6 packets will never cause this counter to increment.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" dmr:version="2.0">
        <description>The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
Note that IPv6 does not define broadcast addresses, so IPv6 packets will never cause this counter to increment.</description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.InterfaceStack.{i}." access="readOnly" numEntriesParameter="InterfaceStackNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>This table contains information about the relationships between the multiple layers of interface objects ({{bibref|TR-181i2|Section 4.3}}). In particular, it contains information on which interfaces run ''on top of'' which other interfaces.
This table is auto-generated by the CPE based on the ''LowerLayers'' parameters on individual interface objects. 
Each table row represents a "link" between two interface objects, a higher-layer interface object (referenced by {{param|HigherLayer}}) and a lower-layer interface object (referenced by {{param|LowerLayer}}). Consequently, if a referenced interface object is deleted, the CPE MUST delete the corresponding {{object}} row(s) that had referenced it.</description>
      <uniqueKey>
        <parameter ref="HigherLayer"/>
        <parameter ref="LowerLayer"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.3">
        <description>{{datatype|expand}}</description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="HigherLayer" access="readOnly" dmr:version="2.0">
        <description>{{noreference}}A reference to the interface object corresponding to the higher layer of the relationship, i.e. the interface which runs on ''top'' of the interface identified by the corresponding instance of {{param|LowerLayer}}. 
When the referenced higher layer interface is deleted, the CPE MUST delete the table row.</description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LowerLayer" access="readOnly" dmr:version="2.0">
        <description>{{noreference}}A reference to the interface object corresponding to the lower layer of the relationship, i.e. the interface which runs ''below'' the interface identified by the corresponding instance of {{param|HigherLayer}}. 
When the referenced lower layer interface is deleted, the CPE MUST delete the table row.</description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.LANConfigSecurity." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>This object contains generic device configuration information.</description>
      <parameter name="ConfigPassword" access="readWrite" dmr:version="2.0">
        <description>A password to allow LAN access to protected auto-configuration services.
If the CPE supports TR-064 (LAN-side DSL CPE Configuration Protocol), this parameter is to be used as the ''dslf-config'' password  (as defined in TR-064).
If the CPE has a user interface with password protection enabled, this parameter is also to be used as the user password for  password-protected operations.  However, this parameter MUST NOT be used to set the user password if the parameter  {{param|.UserInterface.PasswordUserSelectable}} is {{true}}.</description>
        <syntax hidden="true">
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.ManagementServer." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>This object contains parameters relating to the CPE's association with an ACS.</description>
      <parameter name="URL" access="readWrite" dmr:version="2.0">
        <description>URL, as defined in {{bibref|RFC3986}}, for the CPE to connect to the ACS using the CPE WAN Management Protocol. 
This parameter MUST be in the form of a valid HTTP or HTTPS URL.
The ''host'' portion of this URL is used by the CPE for validating the ACS certificate when using SSL or TLS.
Note that on a factory reset of the CPE, the value of this parameter might be reset to its factory value.  If an ACS modifies the  value of this parameter, it SHOULD be prepared to accommodate the situation that the original value is restored as the result of a  factory reset.</description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" dmr:version="2.0">
        <description>Username used to authenticate the CPE when making a connection to the ACS using the CPE WAN Management Protocol.
This username is used only for HTTP-based authentication of the CPE.
Note that on a factory reset of the CPE, the value of this parameter might be reset to its factory value.  If an ACS modifies the  value of this parameter, it SHOULD be prepared to accommodate the situation that the original value is restored as the result of a  factory reset.</description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="2.0">
        <description>Password used to authenticate the CPE when making a connection to the ACS using the CPE WAN Management Protocol.
This password is used only for HTTP-based authentication of the CPE.
Note that on a factory reset of the CPE, the value of this parameter might be reset to its factory value.  If an ACS modifies the  value of this parameter, it SHOULD be prepared to accommodate the situation that the original value is restored as the result of a  factory reset.</description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PeriodicInformEnable" access="readWrite" dmr:version="2.0">
        <description>Whether or not the CPE MUST periodically send CPE information to the ACS using the Inform method  call.</description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PeriodicInformInterval" access="readWrite" dmr:version="2.0">
        <description>The duration in {{units}} of the interval for which the CPE MUST attempt to connect with the ACS and call the  Inform method if {{param|PeriodicInformEnable}} is {{true}}.</description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PeriodicInformTime" access="readWrite" dmr:version="2.0">
        <description>An absolute time reference in UTC to determine when the CPE will initiate the periodic Inform method calls. Each Inform call MUST occur at this reference time plus or minus an integer multiple of the {{param|PeriodicInformInterval}}.
{{param}} is used only to set the ''phase'' of the periodic Informs.  The actual value of {{param}} can be arbitrarily far into the  past or future.
For example, if {{param|PeriodicInformInterval}} is 86400 (a day) and if {{param}} is set to UTC midnight on some day (in the past,  present, or future) then periodic Informs will occur every day at UTC midnight.  These MUST begin on the very next midnight, even if  {{param}} refers to a day in the future.
The Unknown Time value defined in {{bibref|TR-106a2|section 3.2}} indicates that no particular time reference is specified.  That is,  the CPE MAY locally choose the time reference, and needs only to adhere to the specified {{param|PeriodicInformInterval}}.
If absolute time is not available to the CPE, its periodic Inform behavior MUST be the same as if the {{param}} parameter was set to the Unknown Time value.</description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ParameterKey" access="readOnly" activeNotify="canDeny" forcedInform="true" dmr:version="2.0">
        <description>{{param}} provides the ACS a reliable and extensible means to track changes made by the ACS.  The value of  {{param}} MUST be equal to the value of the ParameterKey argument from the most recent successful SetParameterValues, AddObject, or  DeleteObject method call from the ACS.
The CPE MUST set {{param}} to the value specified in the corresponding method arguments if and only if the method completes  successfully and no fault response is generated.  If a method call does not complete successfully (implying that the changes  requested in the method did not take effect), the value of {{param}} MUST NOT be modified.
The CPE MUST only modify the value of {{param}} as a result of SetParameterValues, AddObject, DeleteObject, or due to a factory  reset.  On factory reset, the value of {{param}} MUST be set to {{empty}}.</description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionRequestURL" access="readOnly" activeNotify="forceDefaultEnabled" forcedInform="true" dmr:version="2.0">
        <description>HTTP URL, as defined in {{bibref|RFC3986}}, for an ACS to make a Connection Request notification to the CPE.
In the form:
: http://host:port/path
The ''host'' portion of the URL MAY be the IP address for the management interface of the CPE in lieu of a host name.
Note: If the ''host'' portion of the URL is a literal IPv6 address then it MUST be enclosed in square brackets (see {{bibref|RFC3986|Section 3.2.2}}).</description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionRequestUsername" access="readWrite" dmr:version="2.0">
        <description>Username used to authenticate an ACS making a Connection Request to the CPE.</description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionRequestPassword" access="readWrite" dmr:version="2.0">
        <description>Password used to authenticate an ACS making a Connection Request to the CPE.</description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UpgradesManaged" access="readWrite" dmr:version="2.0">
        <description>Indicates whether or not the ACS will manage upgrades for the CPE.  If {{true}}, the CPE SHOULD NOT use other  means other than the ACS to seek out available upgrades.  If {{false}}, the CPE MAY use other means for this purpose.
Note that an autonomous upgrade (reported via an "10 AUTONOMOUS TRANSFER COMPLETE" Inform Event code) SHOULD be regarded as a managed  upgrade if it is performed according to ACS-specified policy.</description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UDPConnectionRequestAddress" access="readOnly" dmr:version="2.0">
        <description>Address and port to which an ACS MAY send a UDP Connection Request to the CPE (see {{bibref|TR-069a2|Annex G}}).
This parameter is represented in the form of an Authority element as defined in {{bibref|RFC3986}}.  The value MUST be in one of the  following two forms:
: host:port
: host
* When {{param|STUNEnable}} is {{true}}, the ''host'' and ''port'' portions of this parameter MUST represent the public address and port corresponding to the NAT binding through which the ACS can send UDP Connection Request messages (once this information is learned by the CPE through the use of STUN).
* When {{param|STUNEnable}} is {{false}}, the ''host'' and ''port'' portions of the URL MUST represent the local IP address and port on which the CPE is listening for UDP Connection Request messages.
The second form of this parameter MAY be used only if the port value is equal to ''80''.
Note: If the ''host'' portion of the URL is a literal IPv6 address then it MUST be enclosed in square brackets (see {{bibref|RFC3986|Section 3.2.2}}).</description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="STUNEnable" access="readWrite" dmr:version="2.0">
        <description>Enables or disables the use of STUN by the CPE.  This applies only to the use of STUN in association with the  ACS to allow UDP Connection Requests.</description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="STUNServerAddress" access="readWrite" dmr:version="2.0">
        <description>Host name or IP address of the STUN server for the CPE to send Binding Requests if STUN is enabled via  {{param|STUNEnable}}.
If is {{empty}} and {{param|STUNEnable}} is {{true}}, the CPE MUST use the address of the ACS extracted from the host portion of the  ACS URL.</description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="STUNServerPort" access="readWrite" dmr:version="2.0">
        <description>Port number of the STUN server for the CPE to send Binding Requests if STUN is enabled via {{param|STUNEnable}}.
By default, this SHOULD be the equal to the default STUN port, 3478.</description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="STUNUsername" access="readWrite" dmr:version="2.0">
        <description>If is not {{empty}}, the value of the STUN USERNAME attribute to be used in Binding Requests (only if message  integrity has been requested by the STUN server).
If is {{empty}}, the CPE MUST NOT send STUN Binding Requests with message integrity.</description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="STUNPassword" access="readWrite" dmr:version="2.0">
        <description>The value of the STUN Password to be used in computing the MESSAGE-INTEGRITY attribute to be used in Binding  Requests (only if message integrity has been requested by the STUN server).</description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="STUNMaximumKeepAlivePeriod" access="readWrite" dmr:version="2.0">
        <description>If STUN Is enabled, the maximum period, in {{units}}, that STUN Binding Requests MUST be sent by the CPE for the  purpose of maintaining the binding in the Gateway.  This applies specifically to Binding Requests sent from the UDP Connection  Request address and port.
A value of -1 indicates that no maximum period is specified.</description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="STUNMinimumKeepAlivePeriod" access="readWrite" dmr:version="2.0">
        <description>If STUN Is enabled, the minimum period, in {{units}}, that STUN Binding Requests can be sent by the CPE for the  purpose of maintaining the binding in the Gateway.  This limit applies only to Binding Requests sent from the UDP Connection Request  address and port, and only those that do not contain the BINDING-CHANGE attribute.  This limit does not apply to retransmissions  following the procedures defined in {{bibref|RFC3489}}.</description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="NATDetected" access="readOnly" dmr:version="2.0">
        <description>When STUN is enabled, this parameter indicates whether or not the CPE has detected address and/or port mapping  in use.
A {{true}} value indicates that the received MAPPED-ADDRESS in the most recent Binding Response differs from the CPE's source address and port.
When {{param|STUNEnable}} is {{false}}, this value MUST be {{false}}.</description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="AliasBasedAddressing" access="readOnly" forcedInform="true" dmr:version="2.3">
        <description>Indicates whether or not the Alias-Based Addressing Mechanism is supported.
A {{true}} value indicates that the CPE supports the Alias-Based Addressing Mechanism, as defined in {{bibref|TR-069a4|3.6.1}} and described in {{bibref|TR-069a4|Appendix II}}.</description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InstanceMode" access="readWrite" dmr:version="2.3">
        <description>Instance identification mode as defined in {{bibref|TR-069a4|3.6.1}}. When {{param|AliasBasedAddressing}} is {{true}}, {{param}} is used by the ACS to control whether the CPE will use Instance Numbers or Instance Aliases in returned Path Names.  {{enum}} 
This parameter is REQUIRED for any CPE supporting Alias-Based Addressing.</description>
        <syntax>
          <string>
            <enumeration value="InstanceNumber"/>
            <enumeration value="InstanceAlias"/>
          </string>
          <default type="factory" value="InstanceNumber"/>
        </syntax>
      </parameter>
      <parameter name="AutoCreateInstances" access="readWrite" dmr:version="2.3">
        <description>Enable or disable the Auto-Create Instance Mechanism. When {{param|AliasBasedAddressing}} is {{true}}, {{param}} indicates whether or not the CPE will automatically create instances while processing a SetParameterValues RPC (as defined in {{bibref|TR-069a4|A.3.2.1}}).
*A {{true}} value indicates that the CPE will perform auto-creation of instances when the Alias-Based Addressing Mechanism is used in SetParameterValues RPC.
*A {{false}} value indicates that the CPE will not create new object instances. Instead, it will reject the setting of parameters in unrecognized instances and respond with a fault code.
This parameter is REQUIRED for any CPE supporting Alias-Based Addressing.</description>
        <syntax>
          <boolean/>
          <default type="factory" value="false"/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.SoftwareModules." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.1">
      <description>Top level object for dynamically managed software applications.</description>
      <parameter name="ExecEnvNumberOfEntries" access="readOnly" dmr:version="2.1">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DeploymentUnitNumberOfEntries" access="readOnly" dmr:version="2.1">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ExecutionUnitNumberOfEntries" access="readOnly" dmr:version="2.1">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.SoftwareModules.DeploymentUnit.{i}." access="readOnly" numEntriesParameter="DeploymentUnitNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.1">
      <description>This table serves as the Deployment Unit inventory and contains status information about each Deployment Unit.
A new instance of this table gets created during the installation of a Software Module.</description>
      <uniqueKey>
        <parameter ref="UUID"/>
        <parameter ref="Version"/>
        <parameter ref="ExecutionEnvRef"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="UUID" access="readOnly" dmr:version="2.1">
        <description>A Universally Unique Identifier either provided by the ACS, or generated by the CPE, at the time of Deployment Unit Installation.  The format of this value is defined by {{bibref|RFC4122}} Version 3 (Name-Based) and {{bibref|TR-069a3|Annex H}}.
This value MUST NOT be altered when the {{object}} is updated.</description>
        <syntax>
          <string>
            <size maxLength="36"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DUID" access="readOnly" dmr:version="2.1">
        <description>Deployment Unit Identifier chosen by the targeted {{object|#.ExecEnv}}.  The format of this value is Execution Environment specific.</description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.1">
        <description>{{datatype|expand}}</description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.1">
        <description>Indicates the Name of this {{object}}, which is chosen by the author of the Deployment Unit.
The value of this parameter is used in the generation of the {{param|UUID}} based on the rules defined in {{bibref|TR-069a3|Annex H}}.</description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" activeNotify="canDeny" dmr:version="2.1">
        <description>Indicates the status of this {{object}}.</description>
        <syntax>
          <string>
            <enumeration value="Installing">
              <description>This instance is in the process of being Installed and SHOULD transition to the {{enum|Installed}} state.</description>
            </enumeration>
            <enumeration value="Installed">
              <description>This instance has been successfully Installed.  The {{param|Resolved}} flag SHOULD also be referenced for dependency resolution.</description>
            </enumeration>
            <enumeration value="Updating">
              <description>This instance is in the process of being Updated and SHOULD transition to the {{enum|Installed}} state.</description>
            </enumeration>
            <enumeration value="Uninstalling">
              <description>This instance is in the process of being Uninstalled and SHOULD transition to the {{enum|Uninstalled}} state.</description>
            </enumeration>
            <enumeration value="Uninstalled">
              <description>This instance has been successfully Uninstalled.  This status will typically not be seen within a {{object}} instance.</description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Resolved" access="readOnly" dmr:version="2.1">
        <description>Indicates whether or not this {{object}} has resolved all of its dependencies.</description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="URL" access="readOnly" dmr:version="2.1">
        <description>Contains the URL used by the most recent ChangeDUState RPC to either Install or Update this {{object}}.</description>
        <syntax>
          <string>
            <size maxLength="1024"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Vendor" access="readOnly" dmr:version="2.1">
        <description>The author of this {{object}} formatted as a domain name.
The value of this parameter is used in the generation of the {{param|UUID}} based on the rules defined in {{bibref|TR-069a3|Annex H}}.</description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.1">
        <description>Version of this {{object}}.  The format of this value is Execution Environment specific.</description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExecutionUnitList" access="readOnly" dmr:version="2.1">
        <description>Represents the {{object|#.ExecutionUnit}} instances that are associated with this {{object}} instance.</description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="#.ExecutionUnit." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExecutionEnvRef" access="readOnly" dmr:version="2.1">
        <description>Represents the {{object|#.ExecEnv}} instance where this {{object}} instance is installed.</description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.ExecEnv." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.SoftwareModules.ExecEnv.{i}." access="readOnly" numEntriesParameter="ExecEnvNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.1">
      <description>The Execution Environments that are available on the device, along with their properties and configurable settings.</description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.1">
        <description>Indicates whether or not this {{object}} is enabled.
Disabling an enabled Execution Environment stops it, while enabling a disabled Execution Environment starts it.  
When an Execution Environment is disabled, Deployment Units installed to that Execution Environment will be unaffected, but any Execution Units currently running on that Execution Environment will automatically transition to {{enum|Idle|#.ExecutionUnit.{i}.Status}}.
If a ChangeDUState is attempted on a {{object|#.DeploymentUnit}} that is to be applied against a disabled {{object}}, that ChangeDUState operation fails and the associated DUStateChangeComplete RPC will contain a FaultStruct for that operation.
If a SetParameterValues is attempted against the {{param|#.ExecutionUnit.{i}.RequestedState}} for an {{object|#.ExecutionUnit}} that is associated with a disabled {{object}} a CWMP Fault will be issued in response.
Disabling an Execution Environment could place the device in a non-manageable state.  For example, if the operating system itself was modeled as an {{object}} and the ACS disabled it, the CWMP management agent might be terminated leaving the device unmanageable.</description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.1">
        <description>Indicates the status of this {{object}}.</description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Error" optional="true"/>
            <enumeration value="Disabled"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.1">
        <description>{{datatype|expand}}</description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.1">
        <description>A Name provided by the CPE that adequately distinguishes this {{object}} from all other {{object}} instances.</description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Type" access="readOnly" dmr:version="2.1">
        <description>Indicates the complete type and specification version of this {{object}}.</description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Vendor" access="readOnly" dmr:version="2.1">
        <description>The vendor that produced this {{object}}.</description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.1">
        <description>The Version of this {{object}} as specified by the Vendor that implemented this {{object}}, not the version of the specification.</description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ActiveExecutionUnits" access="readOnly" activeNotify="canDeny" dmr:version="2.1">
        <description>Represents the {{object|#.ExecutionUnit}} instances currently running on this {{object}}.  This parameter only contains {{object|#.ExecutionUnit}} instances that currently have a {{param|#.ExecutionUnit.{i}.Status}} of {{enum|Active|#.ExecutionUnit.{i}.Status}}.</description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="#.ExecutionUnit." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.SoftwareModules.ExecutionUnit.{i}." access="readOnly" numEntriesParameter="ExecutionUnitNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.1">
      <description>This table serves as the Execution Unit inventory and contains both status information about each Execution Unit as well as configurable parameters for each Execution Unit.
Each {{object|#.DeploymentUnit}} that is installed can have zero or more Execution Units.  
Once a Deployment Unit is installed it populates this table with its contained Execution Units.  
When the Deployment Unit (that caused this {{object}} to come into existence) is updated, this instance MAY be removed and new instances MAY come into existence.  While the Deployment Unit (that caused this {{object}} to come into existence) is being updated, all {{object}} instances associated with the Deployment Unit will be stopped until the update is complete at which time they will be restored to the state that they were in before the update started.
When the Deployment Unit (that caused this {{object}} to come into existence) is uninstalled, this instance is removed.
Each {{object}} MAY also contain a set of vendor specific parameters displaying status and maintaining configuration that reside under the {{object|Extensions}} object.</description>
      <uniqueKey>
        <parameter ref="EUID"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="EUID" access="readOnly" dmr:version="2.1">
        <description>Execution Unit Identifier chosen by the {{object|#.ExecEnv}} during installation of the associated {{object|#.DeploymentUnit}}.
The format of this value is Execution Environment specific, but it MUST be unique across {{object|#.ExecEnv}} instances.  Thus, it is recommended that this be a combination of the {{param|#.ExecEnv.{i}.Name}} and an Execution Environment local unique value.</description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.1">
        <description>{{datatype|expand}}</description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.1">
        <description>The name of this {{object}} as it pertains to its associated {{object|#.DeploymentUnit}}, which SHOULD be unique across all {{object}} instances contained within its associated {{object|#.DeploymentUnit}}.</description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExecEnvLabel" access="readOnly" dmr:version="2.1">
        <description>The name of this {{object}} as provided by the {{object|#.ExecEnv}}, which SHOULD be unique across all {{object}} instances contained within a specific {{object|#.ExecEnv}}.</description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" activeNotify="forceDefaultEnabled" dmr:version="2.1">
        <description>Indicates the status of this {{object}}.</description>
        <syntax>
          <string>
            <enumeration value="Idle">
              <description>This instance is in an Idle state and not running.</description>
            </enumeration>
            <enumeration value="Starting">
              <description>This instance is in the process of Starting and SHOULD transition to the {{enum|Active}} state.</description>
            </enumeration>
            <enumeration value="Active">
              <description>This instance is currently running.</description>
            </enumeration>
            <enumeration value="Stopping">
              <description>This instance is in the process of Stopping and SHOULD transition to the {{enum|Idle}} state.</description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="RequestedState" access="readWrite" dmr:version="2.1">
        <description>Indicates the state transition that the ACS is requesting for this {{object}}.  {{enum}}
If this {{object}} is associated with an Execution Environment that is disabled and an attempt is made to alter this value, then a CWMP Fault MUST be generated.</description>
        <syntax command="true">
          <string>
            <enumeration value="Idle">
              <description>If this {{object}} is currently in {{enum|Starting|Status}} or {{enum|Active|Status}} the CPE will attempt to Stop the Execution Unit; otherwise this requested state is ignored.</description>
            </enumeration>
            <enumeration value="Active">
              <description>If this {{object}} is currently in {{enum|Idle|Status}} the CPE will attempt to Start the Execution Unit.  If this {{object}} is in {{enum|Stopping|Status}} the request is rejected and a fault raised.  Otherwise this requested state is ignored.</description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExecutionFaultCode" access="readOnly" dmr:version="2.1">
        <description>If while running or transitioning between states this {{object}} identifies a fault this parameter embodies the problem.  The value of {{enum|NoFault}} MUST be used when everything is working as intended. {{enum}}
For fault codes not included in this list, the vendor MAY include vendor-specific values, which MUST use the format defined in {{bibref|TR-106a4|Section 3.3}}.</description>
        <syntax>
          <string>
            <enumeration value="NoFault"/>
            <enumeration value="FailureOnStart"/>
            <enumeration value="FailureOnAutoStart"/>
            <enumeration value="FailureOnStop"/>
            <enumeration value="FailureWhileActive"/>
            <enumeration value="DependencyFailure"/>
            <enumeration value="UnStartable"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExecutionFaultMessage" access="readOnly" dmr:version="2.1">
        <description>If while running or transitioning between states this {{object}} identifies a fault this parameter provides a more detailed explanation of the problem.
If {{param|ExecutionFaultCode}} has the value of {{enum|NoFault|ExecutionFaultCode}} then the value of this parameter MUST {{empty}} and ignored by the ACS.</description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Vendor" access="readOnly" dmr:version="2.1">
        <description>Vendor of this {{object}}.</description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.1">
        <description>Version of the {{object}}.  The format of this value is Execution Environment specific.</description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="References" access="readOnly" dmr:version="2.1">
        <description>Represents the instances of multi-instanced objects that are directly controlled by, and have come into existence because of, this {{object}}.  See {{bibref|TR-157a3|Appendix II.3.2}} for more description and some examples.
NOTE: All other objects and parameters (i.e. not multi-instanced objects) that this {{object}} has caused to come into existence can be discovered via the {{object|.DeviceInfo.SupportedDataModel.{i}.}} table.</description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SupportedDataModelList" access="readOnly" dmr:version="2.1">
        <description>Represents the CWMP-DT schema instances that have been introduced to this device because of the existence of this {{object}}.</description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent=".DeviceInfo.SupportedDataModel." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4" name="Device.SoftwareModules.ExecutionUnit.{i}.Extensions." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.1">
      <description>This object proposes a general location for vendor extensions specific to this Execution Unit, which allows multiple Execution Units to expose parameters without the concern of conflicting parameter names.  These vendor extensions are related to displaying status and maintaining configuration for this Execution Unit.
It is also possible for the Execution Unit to expose status and configuration parameters within Service objects or as embedded objects and parameters directly within the root data model, in which case the combination of {{param|#.References}} and {{param|#.SupportedDataModelList}} will be used to determine their locations.
See {{bibref|TR-157a3|Appendix II.3.2}} for more description and some examples.</description>
    </object>
  </model>
</urn:document>